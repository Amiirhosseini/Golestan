<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        R0lGODlhTQBNAIcAAP/19v/6+/7v/vbu9v/4///8//z7/Pzl/fHG/u/e/fn1/drD/uPR/vz6//38/8qz
        /ruh/rqt6+bh/u7r//Px/ox7/piP/9TR/3Jt/6ah/mhk/sfG/1pa/3V3/7Oz/36C/4iM/4KF7o6R9c3O
        +Nna/1tl/2t0/73A/0hW/1Jf/11q/5Oc/2Nx/218/3OA/3yJ/1Rq/6Su/crR/93h/jhT/0pk/11z/2B4
        /2V6/2d9+n+S/4ia/0Fi/1Zx/2aA/26F/3OL/7C+/ufr/0ps/1Bx/1Z1/1p4/118/119/Fx8+l9+/l59
        /WB9/2KA/3SN8YGX75eq/9Lb/yBS/y5c/ztk/0xz/1F1/1V4/1Z8/1p9/1l69Vd58lZ4711//1p7916C
        /2GE/2WH/2yM/3eR74ul/6e6/+/x+Dxs/0Rv/0Z0/014/1J6/05z40905VB05lqC/1R37lJ26WGE7l5/
        5GuL83OU/mmI6H2d/8LQ/zJp/0l5/1N//1WD/0tx3k1y4U1z31qG/09031J24F+I/2SO/1h74WuR/36e
        9nmW64Gf8ODo/zxz/01+/1CB/1KF/1qK/1iA6GON9XSd/2+R6LLI/7nN//j6/yZn/zNy/0J7/0d+/1WJ
        /12O/2WR8GuU8Jm5/8vb/+zy//X4/zd5/z19/0uF/1WO/1uS/2KV/2uc/2qY9XSg9X2l9UOE/06M/3in
        /8PY//H2/yl6/1SV/1ub/1mQ6Ii0/qXI/9Pk/9/i5xNw/zaF/0KO/0mT/1CY/2Kf/vr8/y2E/ziM/67R
        /yCG/2So/ni0/z6Y/1Wl/7na/miz/sjj/tjr/+Px/0Wl/4/L/3HE/7vm/9zv+Or6/8v0/5jM1tn5/uL9
        /+/+//X+/vj///v///3///n+/fj//Ov/9u//9/v//eL56/X/9/D/8Pn++fz//Pj/9vz/+vz/+fn/8fv+
        9vz/9v//6P//8P//8v//9f//9///+P//+////P39+v/99v778v/8+f/17f/59v/Zy//5+f/8/P///19+
        /yH/C05FVFNDQVBFMi4wAwEBAAAh+QQBAAD/ACwAAAAATQBNAAAI/wD/CRxIsKBBg0m2xPHTp6HDhxD9
        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
</value>
  </data>
</root>